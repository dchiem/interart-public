
<style>
  #sketch{
    width:720px;
    height:720px;
    background-size:cover;
  }

  #comment-field{
    width:300px;
    height:100px;
    border: solid 1px #D5DDE0;
    padding: 10px;
  }

  #comment{
    margin-top:30px;
    box-shadow: 0px 20px 50px #999;
  }
</style>
<div id="annotate">
  <div id="annotate-inner">
    
    <div id="sketch">
      <canvas id="paint"></canvas>
    </div>
    <div id="interface">
      <div id="title">
        Title of this artwork: <%= @piece_version.piece.title %>
      </div>
      <div id="options">
        <%= form_tag do %>
          <div id="colors">
            <% @colors.each do |c| %>
              <%= submit_tag "", :class => "color", :id => c, :style => "background-color:" + c %>
            <% end %>
          </div>
          <div id="thickness">
            Line thickness:
            <% @thicks.each do |t| %>
              <%= submit_tag t, :class => "size", :id => t %>
            <% end %>
          </div>

          <div id="tool">
            Tool:
            <%= submit_tag "marker", :class => "tool", :id => "marker" %>
            <%= submit_tag "eraser", :class => "tool", :id => "eraser" %>  
          </div>
      
          
        <% end %>
      </div>

      <div id="comment">
        <%= form_tag "/pieces/annotate_submit" do %>
          
          <%= hidden_field_tag :piece_version_id, @piece_version.id %>
          <%= hidden_field_tag :piece_id, @piece_version.piece.id %>
          <div class="username"><%= User.find(session[:user]).username %></div>
          <div><%= text_area_tag :comment, nil, :id => "comment-field", :placeholder => "Add a comment..." %></div>
          <div><%= submit_tag "Save comment", :style => "margin-bottom:20px;", :id => 'save' %><%= image_tag "ajax-loader.gif", :class =>"loader", :style => "display:none" %></div>
        <% end %>
      </div>  
<div style="margin-left:160px;font-size:28px;color:#444444;margin-top:10px;margin-bottom:0px;">or</div>
        
      <div class="opt" style='margin-top:20px;margin-left:35px;'>
            <%= link_to "Download to edit with your own tool", "/pieces/download/" + @piece_version.piece.id.to_s , :class => "sx1" %>
          </div>
          <div style="color:#444444; margin-top:5px;margin-bottom:8px; margin-left:165px;">and</div>
          <div class="opt" style="margin-left:60px;">
            <%= link_to "Upload suggested changes", "/pieces/upload/" + @piece_version.piece.id.to_s %>
          </div>
    </div>
    
  </div>
</div>

<script type="text/javascript">




// ******************************************************



// $('#sketch')[0].style.backgroundImage = 'url(<%= @piece_version.url %>)';
// $('#sketch')[0].style.backgroundPosition = "center";

  
function imageLoaded(){
  canvas.width = 700;
  canvas.height = 700;
  
  canvas.getContext("2d").drawImage(image, 0, 0,700,700);
  var context = canvas.getContext('2d');
   
  var sketch = document.querySelector('#sketch');



$('#sketch').mousedown(function(e){
  var mouseX = e.pageX - this.offsetLeft;
  var mouseY = e.pageY - this.offsetTop;
    
  paint = true;
  addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop);
  redraw();
});

$('#sketch').mousemove(function(e){
  if(paint){
    addClick(e.pageX - this.offsetLeft, e.pageY - this.offsetTop, true);
    redraw();
  }
});

$('#sketch').mouseup(function(e){
  paint = false;
});

$('#sketch').mouseleave(function(e){
  paint = false;
});

var clickX = new Array();
var clickY = new Array();
var clickDrag = new Array();
var paint;

function addClick(x, y, dragging)
{
  clickX.push(x);
  clickY.push(y);
  clickDrag.push(dragging);
  if(curTool === "eraser"){
    clickColor.push("white");
  } else {
    clickColor.push(curColor);
  }
   clickSize.push(curSize);
}

function redraw(){
  // context.clearRect(0, 0, context.canvas.width, context.canvas.height); // Clears the canvas
  
  // context.strokeStyle = "#df4b26";
  context.lineJoin = "round";
  
      
  for(var i=0; i < clickX.length; i++) {    
    context.beginPath();
    if(clickDrag[i] && i){
      context.moveTo(clickX[i-1], clickY[i-1]);
     }else{
       context.moveTo(clickX[i]-1, clickY[i]);
     }
     context.lineTo(clickX[i], clickY[i]);
     context.closePath();
     context.strokeStyle = clickColor[i];
     context.stroke();
     context.lineWidth = clickSize[i];
  }
}





var colorPurple = "#cb3594";
var colorGreen = "#659b41";
var colorYellow = "#ffcf33";
var colorBrown = "#986928";
var colorBlack = "#000000";

var curColor = colorBlack;
var clickColor = new Array();
var clickSize = new Array();
var curSize = 4;

var clickTool = new Array();
var curTool = "marker";

$(".size").click(function(){
  var id = $(this).attr("id");
  if(id === "small"){
    curSize = 1;
  } else if (id === "medium"){
    curSize = 4;
  } else if (id === "large"){
    curSize = 9;
  } else if (id === "huge"){
    curSize = 14;
  }
  return false;
});
    


$(".color").click(function(){
  var hex = $(this).attr("id");
  curColor = hex;
  return false;
});
    
$(".tool").click(function(){
  var id = $(this).attr("id");
  if(id === "marker"){
    curTool = "marker";
  }else if(id === "eraser"){
    curTool = "eraser";
  }
  return false;
});
    

  // var sketch_style = getComputedStyle(sketch);
  
//  var mouse = {x: 0, y: 0};
//   var last_mouse = {x: 0, y: 0};
   
//   /* Mouse Capturing Work */
//   canvas.addEventListener('mousemove', function(e) {
//       last_mouse.x = mouse.x;
//       last_mouse.y = mouse.y;
   
//       mouse.x = e.pageX - this.offsetLeft;
//       mouse.y = e.pageY - this.offsetTop;
//   }, false);
  
//    //Drawing on Paint App 
//   ctx.lineWidth = 5;
//   ctx.lineJoin = 'round';
//   ctx.lineCap = 'round';
//   ctx.strokeStyle = 'black';
   
//   canvas.addEventListener('mousedown', function(e) {
//       ctx.beginPath();
//       ctx.moveTo(mouse.x, mouse.y);
   
//       canvas.addEventListener('mousemove', onPaint, false);
//   }, false);
   
//   canvas.addEventListener('mouseup', function() {
//       canvas.removeEventListener('mousemove', onPaint, false);
//   }, false);
   
//   var onPaint = function() {
//     ctx.beginPath();
//     ctx.moveTo(last_mouse.x, last_mouse.y);
//     ctx.lineTo(mouse.x, mouse.y);
//     ctx.closePath();
//     ctx.stroke();
// };

  

}

$(document).ready(function(){
  canvas = document.querySelector('#paint');
  image = new Image();

  image.onload = imageLoaded;
  image.crossOrigin = 'anonymous';
  image.src = "<%= @piece_version.url %>";
  // image.src = "/eye.png";
  $("#save").click(function(){
    $(this).hide();
    $(".loader").show();
    var comment = $("#comment-field").val();
    var dataURL =  canvas.toDataURL('image/png');
    $.post("/pieces/edited", {img:dataURL, com:comment, pvid:<%= @piece_version.id %>}, function(){
      console.log('success');
      window.location = "/pieces/<%= @piece_version.piece.id =%>";
    })
    // window.location = dataURL;
    return false;
  });

    if(!window.location.hash) {
        window.location = window.location + '#loaded';
        window.location.reload();
    }
});
  
  
</script>